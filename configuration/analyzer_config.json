{
    "APKiD_Scan_APK_DEX_JAR": {
        "type": "file",
        "python_module": "apkid.APKiD",
        "description": "APKiD identifies many compilers, packers, obfuscators, and other weird stuff from an APK or DEX file.",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/zip",
            "application/java-archive",
            "application/vnd.android.package-archive",
            "application/x-dex"
        ],
        "config": {
            "soft_time_limit": 400,
            "queue": "default"
        },
        "secrets": {}
    },
    "AbuseIPDB": {
        "type": "observable",
        "python_module": "abuseipdb.AbuseIPDB",
        "description": "check if an ip was reported on AbuseIPDB",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Auth0": {
        "type": "observable",
        "python_module": "auth0.Auth0",
        "description": "scan an IP against the Auth0 API",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "BoxJS_Scan_JavaScript": {
        "type": "file",
        "python_module": "boxjs_scan.BoxJS",
        "description": "A tool for studying JavaScript malware",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-javascript",
            "application/javascript",
            "text/javascript"
        ],
        "config": {
            "soft_time_limit": 400,
            "queue": "default"
        },
        "secrets": {}
    },
    "CheckDMARC": {
        "type": "observable",
        "python_module": "checkdmarc.CheckDMARC",
        "description": "An SPF and DMARC DNS records validator",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "observable_supported": [
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "CIRCLPassiveDNS": {
        "type": "observable",
        "python_module": "circl_pdns.CIRCL_PDNS",
        "description": "scan an observable against the CIRCL Passive DNS DB",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "CIRCLPassiveSSL": {
        "type": "observable",
        "python_module": "circl_pssl.CIRCL_PSSL",
        "description": "scan an observable against the CIRCL Passive SSL DB",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Classic_DNS": {
        "type": "observable",
        "python_module": "dns.dns_resolvers.classic_dns_resolver.ClassicDNSResolver",
        "description": "Retrieve current domain resolution with default DNS",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "query_type": {
                "value": "A",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "CloudFlare_DNS": {
        "type": "observable",
        "python_module": "dns.dns_resolvers.cloudflare_dns_resolver.CloudFlareDNSResolver",
        "description": "Retrieve current domain resolution with CloudFlare DoH (DNS over HTTPS)",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "query_type": {
                "value": "A",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "CloudFlare_Malicious_Detector": {
        "type": "observable",
        "python_module": "dns.dns_malicious_detectors.cloudflare_malicious_detector.CloudFlareMaliciousDetector",
        "description": "Scan an observable against CloudFlare DB",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Capa_Info": {
        "type": "file",
        "python_module": "capa_info.CapaInfo",
        "description": "capa detects capabilities in executable files",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 500,
            "queue": "long"
        },
        "secrets": {}
    },
    "Censys_Search": {
        "type": "observable",
        "python_module": "censys.Censys",
        "description": "scan an IP address against Censys View API",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "censys_analysis": {
                "value": "search",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "CRXcavator": {
        "type": "observable",
        "python_module": "crxcavator.CRXcavator",
        "description": "scans a chrome extension against crxcavator.io",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "generic"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Cuckoo_Scan": {
        "type": "file",
        "python_module": "cuckoo_scan.CuckooAnalysis",
        "description": "scan a file on a Cuckoo instance",
        "disabled": false,
        "requires_configuration": true,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 500,
            "queue": "long"
        },
        "secrets": {
            "api_key_name": {
                "value": "CUCKOO_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "max_post_tries": {
                "value": 5,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "max_poll_tries": {
                "value": 20,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Cymru_Hash_Registry_Get_File": {
        "type": "file",
        "python_module": "cymru.Cymru",
        "description": "Check if a particular file is known to be malware by Team Cymru",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "run_hash": true,
        "config": {
            "soft_time_limit": 50,
            "queue": "default"
        },
        "secrets": {}
    },
    "Cymru_Hash_Registry_Get_Observable": {
        "type": "observable",
        "python_module": "cymru.Cymru",
        "description": "Check if a particular hash is available in the malware hash registry of Team Cymru",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "hash"
        ],
        "config": {
            "soft_time_limit": 50,
            "queue": "default"
        },
        "secrets": {}
    },
    "DNSDB": {
        "type": "observable",
        "python_module": "dnsdb.DNSdb",
        "description": "scan an observable against the Passive DNS Farsight Database (support both v1 and v2 versions)",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url",
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "server": {
                "value": "api.dnsdb.info",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "api_version": {
                "value": 2,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "DNStwist": {
        "type": "observable",
        "python_module": "dnstwist.DNStwist",
        "description": "scans for potentially malicious permutations of a domain name",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 300,
            "queue": "default"
        },
        "secrets": {}
    },
    "Doc_Info": {
        "type": "file",
        "python_module": "doc_info.DocInfo",
        "description": "static generic document analysis (Oletools)",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/msword",
            "application/vnd.ms-office",
            "application/vnd.ms-excel.addin.macroEnabled",
            "application/x-mspublisher",
            "application/vnd.ms-powerpoint",
            "application/vnd.ms-excel",
            "application/vnd.ms-excel.sheet.macroEnabled.12",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "application/vnd.openxmlformats-officedocument.presentationml.presentation",
            "text/x-ms-iqy",
            "application/excel",
            "text/xml",
            "application/xml",
            "application/zip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "local"
        },
        "secrets": {}
    },
    "Doc_Info_Experimental": {
        "type": "file",
        "python_module": "doc_info.DocInfo",
        "description": "static document analysis with new features to analyze XLM macros, encrypted macros and more",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/msword",
            "application/vnd.ms-office",
            "application/vnd.ms-excel.addin.macroEnabled",
            "application/x-mspublisher",
            "application/vnd.ms-powerpoint",
            "application/vnd.ms-excel",
            "application/vnd.ms-excel.sheet.macroEnabled.12",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "application/vnd.openxmlformats-officedocument.presentationml.presentation",
            "text/x-ms-iqy",
            "application/excel",
            "text/xml",
            "application/xml"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "local"
        },
        "secrets": {
            "experimental": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "EmailRep": {
        "type": "observable",
        "python_module": "emailrep.EmailRep",
        "description": "Get email reputation from emailrep.io",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "generic"
        ],
        "config": {
            "soft_time_limit": 50,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "EMAILREP_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "File_Info": {
        "type": "file",
        "python_module": "file_info.FileInfo",
        "description": "basic static analysis, extracts metadata and hashes",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 30,
            "queue": "local"
        },
        "secrets": {}
    },
    "FireHol_IPList": {
        "type": "observable",
        "python_module": "firehol_iplist.FireHol_IPList",
        "description": "check if an IP is in FireHol's IPList",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 180,
            "queue": "default"
        },
        "secrets": {
            "list_names": {
                "value": [
                    "firehol_level1.netset"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Floss": {
        "type": "file",
        "python_module": "floss.Floss",
        "description": "Advanced String Extraction by FireEye",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 500,
            "queue": "default"
        },
        "secrets": {
            "max_no_of_strings": {
                "value": {
                    "stack_strings": 1000,
                    "static_strings": 1000,
                    "decoded_strings": 1000
                },
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "rank_strings": {
                "value": {
                    "stack_strings": false,
                    "static_strings": false,
                    "decoded_strings": false
                },
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Fortiguard": {
        "type": "observable",
        "python_module": "fortiguard.Fortiguard",
        "description": "scan an observable with the Fortiguard URL Analyzer",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Google_DNS": {
        "type": "observable",
        "python_module": "dns.dns_resolvers.google_dns_resolver.GoogleDNSResolver",
        "description": "Retrieve current domain resolution with Google DoH (DNS over HTTPS)",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "query_type": {
                "value": "A",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "GoogleWebRisk": {
        "type": "observable",
        "python_module": "dns.dns_malicious_detectors.google_webrisk.WebRisk",
        "description": "Scan an observable against Web Risk API",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 20,
            "queue": "default"
        },
        "secrets": {}
    },
    "GoogleSafebrowsing": {
        "type": "observable",
        "python_module": "dns.dns_malicious_detectors.googlesf.GoogleSF",
        "description": "Scan an observable against GoogleSafeBrowsing DB",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "GreyNoise": {
        "type": "observable",
        "python_module": "greynoise.GreyNoise",
        "description": "scan an IP against the Greynoise API (requires API key)",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "greynoise_api_version": {
                "value": "v2",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "api_key_name": {
                "value": "GREYNOISE_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "GreyNoiseCommunity": {
        "type": "observable",
        "python_module": "greynoise.GreyNoise",
        "description": "scan an IP against the Community Greynoise API",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "greynoise_api_version": {
                "value": "v3",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "GreyNoiseAlpha": {
        "type": "observable",
        "python_module": "greynoise.GreyNoise",
        "description": "scan an IP against the Alpha Greynoise API (no API key required)",
        "disabled": true,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "greynoise_api_version": {
                "value": "v1",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "HoneyDB": {
        "type": "observable",
        "python_module": "honeydb.HoneyDB",
        "description": "HoneyDB IP lookup service",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 200,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "HONEYDB_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "api_id_name": {
                "value": "HONEYDB_API_ID",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "honeydb_analysis": {
                "value": "all",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Hunter": {
        "type": "observable",
        "python_module": "hunter.Hunter",
        "description": "Scans a domain name and returns set of data about the organisation, the email address found and additional information about the people owning those email addresses",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "HUNTER_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "HybridAnalysis_Get_File": {
        "type": "file",
        "python_module": "ha_get.HybridAnalysisGet",
        "description": "check file hash on HybridAnalysis sandbox reports",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "run_hash": true,
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "HybridAnalysis_Get_Observable": {
        "type": "observable",
        "python_module": "ha_get.HybridAnalysisGet",
        "description": "search an observable in the HybridAnalysis sandbox reports",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "IntelX_Phonebook": {
        "type": "observable",
        "python_module": "intelx.IntelX",
        "description": "Phonebook alike search against IntelX API",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "url",
            "domain",
            "hash"
        ],
        "config": {
            "soft_time_limit": 45,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "INTELX_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "rows_limit": {
                "value": 100,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Intezer_Scan": {
        "type": "file",
        "python_module": "intezer_scan.IntezerScan",
        "description": "scan a file on Intezer",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": true,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 180,
            "queue": "long"
        },
        "secrets": {}
    },
    "InQuest_IOCdb": {
        "type": "observable",
        "python_module": "inquest.InQuest",
        "description": "Indicators of Compromise Database - search IOCdb",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "url",
            "domain",
            "hash",
            "generic"
        ],
        "config": {
            "soft_time_limit": 300,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "INQUEST_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "inquest_analysis": {
                "value": "iocdb_search",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "InQuest_REPdb": {
        "type": "observable",
        "python_module": "inquest.InQuest",
        "description": "Reputation Database - search REPdb",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "url",
            "domain",
            "hash",
            "generic"
        ],
        "config": {
            "soft_time_limit": 300,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "INQUEST_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "inquest_analysis": {
                "value": "repdb_search",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "InQuest_DFI": {
        "type": "observable",
        "python_module": "inquest.InQuest",
        "description": "Deep File Inspection - search dfi",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "url",
            "domain",
            "hash",
            "generic"
        ],
        "config": {
            "soft_time_limit": 300,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "INQUEST_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "inquest_analysis": {
                "value": "dfi_search",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "IPInfo": {
        "type": "observable",
        "python_module": "ipinfo.IPInfo",
        "description": "Brief Information regarding given IP",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "IPINFO_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Manalyze": {
        "type": "file",
        "python_module": "manalyze.Manalyze",
        "description": "A static analyzer for PE files",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 720,
            "queue": "default"
        },
        "secrets": {}
    },
    "MISP": {
        "type": "observable",
        "python_module": "misp.MISP",
        "description": "scan an observable on a custom MISP instance",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "MISP_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "url_key_name": {
                "value": "MISP_URL",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "ssl_check": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "MISPFIRST": {
        "type": "observable",
        "python_module": "misp.MISP",
        "description": "scan an observable on the FIRST MISP instance",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "FIRST_MISP_API",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "url_key_name": {
                "value": "FIRST_MISP_URL",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "MISPFIRST_Check_Hash": {
        "type": "file",
        "python_module": "misp.MISP",
        "description": "check a file hash on the FIRST MISP instance",
        "disabled": false,
        "requires_configuration": true,
        "external_service": false,
        "leaks_info": false,
        "run_hash": true,
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "FIRST_MISP_API",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "url_key_name": {
                "value": "FIRST_MISP_URL",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "MISP_Check_Hash": {
        "type": "file",
        "python_module": "misp.MISP",
        "description": "check a file hash on a MISP instance",
        "disabled": false,
        "requires_configuration": true,
        "external_service": false,
        "leaks_info": false,
        "run_hash": true,
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Malpedia_Scan": {
        "type": "file",
        "python_module": "malpedia_scan.MalpediaScan",
        "description": "scan a binary or a zip file (pwd:infected) against all the yara rules available in Malpedia",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-binary",
            "application/x-dosexec",
            "application/x-executable",
            "application/x-macbinary",
            "application/mac-binary",
            "application/octet-stream",
            "application/zip",
            "application/x-zip-compressed",
            "application/x-compressed",
            "multipart/x-zip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "long"
        },
        "secrets": {
            "api_key_name": {
                "value": "MALPEDIA_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "MalwareBazaar_Get_File": {
        "type": "file",
        "python_module": "mb_get.MB_GET",
        "description": "Check if a particular malware sample is known to MalwareBazaar",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "run_hash": true,
        "config": {
            "soft_time_limit": 50,
            "queue": "default"
        },
        "secrets": {}
    },
    "MalwareBazaar_Get_Observable": {
        "type": "observable",
        "python_module": "mb_get.MB_GET",
        "description": "Check if a particular malware hash is known to MalwareBazaar",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "hash"
        ],
        "config": {
            "soft_time_limit": 50,
            "queue": "default"
        },
        "secrets": {}
    },
    "MalwareBazaar_Google_Observable": {
        "type": "observable",
        "python_module": "mb_google.MB_GOOGLE",
        "description": "Check if a particular IP, domain or url is known to MalwareBazaar using google search",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 50,
            "queue": "default"
        },
        "secrets": {}
    },
    "MaxMindGeoIP": {
        "type": "observable",
        "python_module": "maxmind.Maxmind",
        "description": "extract GeoIP info for an IP",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "MWDB_Scan": {
        "type": "file",
        "python_module": "mwdb_scan.MWDB_Scan",
        "description": "Scan a file against MWDB by Cert Polska",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": true,
        "config": {
            "soft_time_limit": 400,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "MWDB_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "upload_file": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "max_tries": {
                "value": 50,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "ONYPHE": {
        "type": "observable",
        "python_module": "onyphe.Onyphe",
        "description": "search an observable in the ONYPHE",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 50,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "ONYPHE_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "OTXQuery": {
        "type": "observable",
        "python_module": "otx.OTX",
        "description": "scan an observable on Alienvault OTX",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 40,
            "queue": "default"
        },
        "secrets": {
            "verbose": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "OTX_Check_Hash": {
        "type": "file",
        "python_module": "otx.OTX",
        "description": "check file hash on OTX Alienvault",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "run_hash": true,
        "config": {
            "soft_time_limit": 40,
            "queue": "default"
        },
        "secrets": {
            "verbose": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "PDF_Info": {
        "type": "file",
        "python_module": "pdf_info.PDFInfo",
        "description": "static PDF analysis (peepdf + pdfid)",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/pdf"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "local"
        },
        "secrets": {}
    },
    "PE_Info": {
        "type": "file",
        "python_module": "pe_info.PEInfo",
        "description": "static PE analysis (pefile)",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "local"
        },
        "secrets": {}
    },
    "PEframe_Scan": {
        "type": "file",
        "python_module": "peframe.PEframe",
        "description": "Perform static analysis on Portable Executable malware and malicious MS Office documents",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 500,
            "queue": "local"
        },
        "secrets": {}
    },
    "Phishtank": {
        "type": "observable",
        "python_module": "phishtank.Phishtank",
        "description": "Check if url is verified in Phishtank API",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "url"
        ],
        "config": {
            "soft_time_limit": 100,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "PHISHTANK_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Pulsedive_Active_IOC": {
        "type": "observable",
        "python_module": "pulsedive.Pulsedive",
        "description": "Scan indicators and retrieve results from Pulsedive's API",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 100,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "PULSEDIVE_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "active_scan": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Rendertron": {
        "type": "observable",
        "python_module": "rendertron.Rendertron",
        "description": "get screenshot of a web page using rendertron (puppeteer)",
        "disabled": false,
        "requires_configuration": true,
        "external_service": false,
        "leaks_info": false,
        "observable_supported": [
            "url"
        ],
        "config": {
            "soft_time_limit": 320,
            "queue": "local"
        },
        "secrets": {}
    },
    "Qiling_Windows": {
        "type": "file",
        "python_module": "qiling.Qiling",
        "description": "Qiling PE emulation",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 120,
            "queue": "long"
        },
        "secrets": {
            "os": {
                "value": "windows",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "arch": {
                "value": "x86",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "profile": {
                "value": null,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "shellcode": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Qiling_Windows_Shellcode": {
        "type": "file",
        "python_module": "qiling.Qiling",
        "description": "Qiling windows shellcode emulation",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/octet-stream"
        ],
        "config": {
            "soft_time_limit": 120,
            "queue": "long"
        },
        "secrets": {
            "os": {
                "value": "windows",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "arch": {
                "value": "x86",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "profile": {
                "value": null,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "shellcode": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Qiling_Linux": {
        "type": "file",
        "python_module": "qiling.Qiling",
        "description": "Qiling ELF emulation",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-sharedlib",
            "application/x-executable"
        ],
        "config": {
            "soft_time_limit": 120,
            "queue": "long"
        },
        "secrets": {
            "os": {
                "value": "linux",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "arch": {
                "value": "x86",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "profile": {
                "value": null,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "shellcode": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Qiling_Linux_Shellcode": {
        "type": "file",
        "python_module": "qiling.Qiling",
        "description": "Qiling linux shellcode emulation",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/octet-stream"
        ],
        "config": {
            "soft_time_limit": 120,
            "queue": "long"
        },
        "secrets": {
            "os": {
                "value": "linux",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "arch": {
                "value": "x86",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "profile": {
                "value": null,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "shellcode": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Quad9_DNS": {
        "type": "observable",
        "python_module": "dns.dns_resolvers.quad9_dns_resolver.Quad9DNSResolver",
        "description": "Retrieve current domain resolution with Quad9 DoH (DNS over HTTPS)",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "query_type": {
                "value": "A",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Quad9_Malicious_Detector": {
        "type": "observable",
        "python_module": "dns.dns_malicious_detectors.quad9_malicious_detector.Quad9MaliciousDetector",
        "description": "Check if a domain or an url is marked as malicious in Quad9 database",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Quark_Engine_APK": {
        "type": "file",
        "python_module": "quark_engine.QuarkEngine",
        "description": "An Obfuscation-Neglect Android Malware Scoring System",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/zip",
            "application/java-archive",
            "application/vnd.android.package-archive",
            "application/x-dex"
        ],
        "config": {
            "soft_time_limit": 120,
            "queue": "long"
        },
        "secrets": {}
    },
    "Robtex_Forward_PDNS_Query": {
        "type": "observable",
        "python_module": "robtex.Robtex",
        "description": "scan a domain against the Robtex Passive DNS DB",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "robtex_analysis": {
                "value": "forward_pdns",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Robtex_IP_Query": {
        "type": "observable",
        "python_module": "robtex.Robtex",
        "description": "get IP info from Robtex",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "robtex_analysis": {
                "value": "ip_query",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Robtex_Reverse_PDNS_Query": {
        "type": "observable",
        "python_module": "robtex.Robtex",
        "description": "scan an IP against the Robtex Passive DNS DB",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "robtex_analysis": {
                "value": "reverse_pdns",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Rtf_Info": {
        "type": "file",
        "python_module": "rtf_info.RTFInfo",
        "description": "static RTF analysis (Oletools)",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "text/rtf",
            "application/rtf"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Securitytrails_Details": {
        "type": "observable",
        "python_module": "securitytrails.SecurityTrails",
        "description": "scan a domain against securitytrails API for general details",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "securitytrails_analysis": {
                "value": "current",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "securitytrails_current_type": {
                "value": "details",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Securitytrails_History_DNS": {
        "type": "observable",
        "python_module": "securitytrails.SecurityTrails",
        "description": "scan a domain against securitytrails API for historical DNS",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "securitytrails_analysis": {
                "value": "history",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "securitytrails_history_analysis": {
                "value": "dns",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Securitytrails_History_WHOIS": {
        "type": "observable",
        "python_module": "securitytrails.SecurityTrails",
        "description": "scan a domain against securitytrails API for historical WHOIS",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "securitytrails_analysis": {
                "value": "history",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "securitytrails_history_analysis": {
                "value": "whois",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Securitytrails_IP_Neighbours": {
        "type": "observable",
        "python_module": "securitytrails.SecurityTrails",
        "description": "scan an IP against securitytrails API for neighbour IPs",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Securitytrails_Subdomains": {
        "type": "observable",
        "python_module": "securitytrails.SecurityTrails",
        "description": "scan a domain against securitytrails API for subdomains",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "securitytrails_analysis": {
                "value": "current",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "securitytrails_current_type": {
                "value": "subdomains",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Securitytrails_Tags": {
        "type": "observable",
        "python_module": "securitytrails.SecurityTrails",
        "description": "scan a domain against securitytrails API for tags",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "securitytrails_analysis": {
                "value": "current",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "securitytrails_current_type": {
                "value": "tags",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Shodan_Honeyscore": {
        "type": "observable",
        "python_module": "shodan.Shodan",
        "description": "scan an IP against Shodan Honeyscore API",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "shodan_analysis": {
                "value": "honeyscore",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Shodan_Search": {
        "type": "observable",
        "python_module": "shodan.Shodan",
        "description": "scan an IP against Shodan Search API",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "shodan_analysis": {
                "value": "search",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Signature_Info": {
        "type": "file",
        "python_module": "signature_info.SignatureInfo",
        "description": "PE signature extractor",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "local"
        },
        "secrets": {}
    },
    "SpeakEasy": {
        "type": "file",
        "python_module": "speakeasy_emulation.SpeakEasy",
        "description": "speakeasy emulation report",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 120,
            "queue": "long"
        },
        "secrets": {}
    },
    "SSAPINet": {
        "type": "observable",
        "python_module": "ss_api_net.SSAPINet",
        "description": "get a screenshot of a web page using screenshotapi.net (external source)",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "url"
        ],
        "config": {
            "soft_time_limit": 300,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "SSAPINET_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "use_proxy": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "proxy": {
                "value": "",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "output": {
                "value": "image",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "extra_api_params": {
                "value": {
                    "full_page": true
                },
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Strings_Info_Classic": {
        "type": "file",
        "python_module": "strings_info.StringsInfo",
        "description": "strings extraction",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 70,
            "queue": "local"
        },
        "secrets": {
            "max_number_of_strings": {
                "value": 300,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "rank_strings": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Strings_Info_ML": {
        "type": "file",
        "python_module": "strings_info.StringsInfo",
        "description": "strings extraction plus strings ranking based on Machine Learning. Leverages Fireeye's Stringsifter",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 70,
            "queue": "local"
        },
        "secrets": {
            "max_number_of_strings": {
                "value": 200,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "rank_strings": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Stratosphere_Blacklist": {
        "type": "observable",
        "python_module": "stratosphere.Stratos",
        "description": "Cross refernce an IP in blacklist provided by Stratosphere lab",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 120,
            "queue": "default"
        },
        "secrets": {}
    },
    "TalosReputation": {
        "type": "observable",
        "python_module": "talos.Talos",
        "description": "check an IP reputation from Talos downloaded IP list",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "ThreatFox": {
        "type": "observable",
        "python_module": "threatfox.ThreatFox",
        "description": "search for an IOC in ThreatFox's database",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "url",
            "domain",
            "hash",
            "generic"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Threatminer_PDNS": {
        "type": "observable",
        "python_module": "threatminer.Threatminer",
        "description": "retrieve PDNS data from Threatminer API",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "rt_value": {
                "value": 2,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Threatminer_Reports_Tagging": {
        "type": "observable",
        "python_module": "threatminer.Threatminer",
        "description": "retrieve reports from Threatminer API",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "rt_value": {
                "value": 6,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Threatminer_Subdomains": {
        "type": "observable",
        "python_module": "threatminer.Threatminer",
        "description": "retrieve subdomains from Threatminer API",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "rt_value": {
                "value": 5,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Thug_HTML_Info": {
        "type": "file",
        "python_module": "thug_file.ThugFile",
        "description": "Perform hybrid dynamic/static analysis on a saved HTML page",
        "disabled": false,
        "requires_configuration": true,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "text/html"
        ],
        "config": {
            "soft_time_limit": 600,
            "queue": "long"
        },
        "secrets": {
            "dom_events": {
                "value": "click,mouseover",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "use_proxy": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "proxy": {
                "value": "",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "enable_image_processing_analysis": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "enable_awis": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "user_agent": {
                "value": "winxpie60",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Thug_URL_Info": {
        "type": "observable",
        "python_module": "thug_url.ThugUrl",
        "description": "Perform hybrid dynamic/static analysis on a URL",
        "disabled": false,
        "requires_configuration": true,
        "external_service": false,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 600,
            "queue": "local"
        },
        "secrets": {
            "dom_events": {
                "value": "click,mouseover",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "use_proxy": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "proxy": {
                "value": "",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "enable_image_processing_analysis": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "enable_awis": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "user_agent": {
                "value": "winxpie60",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "TorProject": {
        "type": "observable",
        "python_module": "tor.Tor",
        "description": "check if an IP is a Tor Exit Node",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Tranco": {
        "type": "observable",
        "python_module": "tor.Tor",
        "description": "check if a domain is in the last Tranco ranking top sites list",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {}
    },
    "Triage_Search": {
        "type": "observable",
        "python_module": "triage_search.TriageSearch",
        "description": "analyze a url sample using triage sandbox environment",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 300,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "TRIAGE_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "endpoint": {
                "value": "public",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "analysis_type": {
                "value": "search",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "report_type": {
                "value": "overview",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Triage_Scan": {
        "type": "file",
        "python_module": "triage_scan.TriageScanFile",
        "description": "leverage Triage sandbox environment to scan various files",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 300,
            "queue": "long"
        },
        "secrets": {
            "api_key_name": {
                "value": "TRIAGE_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "endpoint": {
                "value": "public",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "report_type": {
                "value": "overview",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "UnpacMe_EXE_Unpacker": {
        "type": "file",
        "python_module": "unpac_me.UnpacMe",
        "description": "UnpacMe unpacker",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": true,
        "supported_filetypes": [
            "application/x-dosexec"
        ],
        "config": {
            "soft_time_limit": 400,
            "queue": "long"
        },
        "secrets": {
            "api_key_name": {
                "value": "UNPAC_ME_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "private": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "max_tries": {
                "value": 30,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "URLhaus": {
        "type": "observable",
        "python_module": "urlhaus.URLHaus",
        "description": "Query a domain or URL against URLhaus API",
        "disabled": false,
        "requires_configuration": false,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "domain",
            "url"
        ],
        "config": {
            "soft_time_limit": 50,
            "queue": "default"
        },
        "secrets": {}
    },
    "UrlScan_Submit_Result": {
        "type": "observable",
        "python_module": "urlscan.UrlScan",
        "description": "Submit & retrieve result of a URL against URLScan API",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "url"
        ],
        "config": {
            "soft_time_limit": 100,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "URLSCAN_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "visibility": {
                "value": "private",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "urlscan_analysis": {
                "value": "submit_result",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "UrlScan_Search": {
        "type": "observable",
        "python_module": "urlscan.UrlScan",
        "description": "Search an IP/domain/url/hash against URLScan API",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 100,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "URLSCAN_API_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "urlscan_analysis": {
                "value": "search",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "VirusTotal_v2_Get_File": {
        "type": "file",
        "python_module": "vt2_get.VirusTotalv2",
        "description": "check file hash on VirusTotal using old API endpoints",
        "disabled": true,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "run_hash": true,
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "VT_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "VirusTotal_v2_Get_Observable": {
        "type": "observable",
        "python_module": "vt2_get.VirusTotalv2",
        "description": "search an observable in the VirusTotal DB using the old API endpoints",
        "disabled": true,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "VT_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "VirusTotal_v2_Scan_File": {
        "type": "file",
        "python_module": "vt2_scan.VirusTotalv2ScanFile",
        "description": "scan a file on VirusTotal using old API endpoints",
        "disabled": true,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": true,
        "config": {
            "soft_time_limit": 400,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "VT_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "VirusTotal_v3_Get_File": {
        "type": "file",
        "python_module": "vt3_get.VirusTotalv3",
        "description": "check file hash on VirusTotal",
        "disabled": true,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "run_hash": true,
        "config": {
            "soft_time_limit": 40,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "VT_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "VirusTotal_v3_Get_File_And_Scan": {
        "type": "file",
        "python_module": "vt3_get.VirusTotalv3",
        "description": "check file hash on VirusTotal. If not already available, send the sample and perform a new scan",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": true,
        "run_hash": true,
        "config": {
            "soft_time_limit": 500,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "VT_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "force_active_scan": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "VirusTotal_v3_Get_Observable": {
        "type": "observable",
        "python_module": "vt3_get.VirusTotalv3",
        "description": "search an observable in the VirusTotal DB",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain",
            "url",
            "hash"
        ],
        "config": {
            "soft_time_limit": 40,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "VT_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Whoisxmlapi": {
        "type": "observable",
        "python_module": "whoisxmlapi.Whoisxmlapi",
        "description": "the WHOIS record data, of a domain name, an IP address, or an email address",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "WHOISXMLAPI_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "WiGLE": {
        "type": "observable",
        "python_module": "wigle.WiGLE",
        "description": "Maps and database of 802.11 wireless networks, with statistics, submitted by wardrivers, netstumblers, and net huggers.",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "generic"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "WIGLE_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "search_type": {
                "value": "WiFi Network",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "XForceExchange": {
        "type": "observable",
        "python_module": "xforce.XForce",
        "description": "scan an observable on IBM X-Force Exchange.",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "hash",
            "url"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "XFORCE_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "api_password_name": {
                "value": "XFORCE_PASSWORD",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Xlm_Macro_Deobfuscator": {
        "type": "file",
        "python_module": "xlm_macro_deobfuscator.XlmMacroDeobfuscator",
        "description": "Xlm macro deobfuscator",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "supported_filetypes": [
            "application/vnd.ms-excel.addin.macroEnabled",
            "application/x-mspublisher",
            "application/vnd.ms-excel",
            "application/vnd.ms-excel.sheet.macroEnabled.12",
            "application/excel",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "application/zip"
        ],
        "config": {
            "soft_time_limit": 30,
            "queue": "default"
        },
        "secrets": {
            "passwords_to_check": {
                "value": [
                    "agenzia",
                    "inps",
                    "coronavirus"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_Community": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with community yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "local"
        },
        "secrets": {
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_Daily_Ioc": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with StrangerealIntel daily IOC yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "default"
        },
        "secrets": {
            "git_repo_main_dir": {
                "value": [
                    "/opt/deploy/yara/daily_ioc_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/daily_ioc_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "recursive": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_FireEye": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with FireEye yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "local"
        },
        "secrets": {
            "git_repo_main_dir": {
                "value": [
                    "/opt/deploy/yara/fireeye_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/fireeye_rules/rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "recursive": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_Florian": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with Neo23x0 yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "default"
        },
        "secrets": {
            "git_repo_main_dir": {
                "value": [
                    "/opt/deploy/yara/signature-base"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/signature-base/yara"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_Inquest": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with Inquest yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "local"
        },
        "secrets": {
            "git_repo_main_dir": {
                "value": [
                    "/opt/deploy/yara/inquest_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/inquest_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "recursive": {
                "value": false,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_Intezer": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with Intezer yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "local"
        },
        "secrets": {
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/intezer_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_McAfee": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with McAfee yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "local"
        },
        "secrets": {
            "git_repo_main_dir": {
                "value": [
                    "/opt/deploy/yara/mcafee_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/mcafee_rules/APT",
                    "/opt/deploy/yara/mcafee_rules/RAT",
                    "/opt/deploy/yara/mcafee_rules/malware",
                    "/opt/deploy/yara/mcafee_rules/miners",
                    "/opt/deploy/yara/mcafee_rules/ransomware",
                    "/opt/deploy/yara/mcafee_rules/stealer"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_ReversingLabs": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with ReversingLabs yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "local"
        },
        "secrets": {
            "git_repo_main_dir": {
                "value": [
                    "/opt/deploy/yara/reversinglabs_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/reversinglabs_rules/yara"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "recursive": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_Samir": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with Samir Threat Hunting yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "local"
        },
        "secrets": {
            "git_repo_main_dir": {
                "value": [
                    "/opt/deploy/yara/samir_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/samir_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "Yara_Scan_Stratosphere": {
        "type": "file",
        "python_module": "yara_scan.YaraScan",
        "description": "scan a file with Stratosphere yara rules",
        "disabled": false,
        "requires_configuration": false,
        "external_service": false,
        "leaks_info": false,
        "config": {
            "soft_time_limit": 60,
            "queue": "local"
        },
        "secrets": {
            "git_repo_main_dir": {
                "value": [
                    "/opt/deploy/yara/stratosphere_rules"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "directories_with_rules": {
                "value": [
                    "/opt/deploy/yara/stratosphere_rules/malware",
                    "/opt/deploy/yara/stratosphere_rules/protocols"
                ],
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    },
    "ZoomEye": {
        "type": "observable",
        "python_module": "zoomeye.ZoomEye",
        "description": "Cyberspace Search Engine recording information of devices, websites, services and components etc..",
        "disabled": false,
        "requires_configuration": true,
        "external_service": true,
        "leaks_info": false,
        "observable_supported": [
            "ip",
            "domain"
        ],
        "config": {
            "soft_time_limit": 60,
            "queue": "default"
        },
        "secrets": {
            "api_key_name": {
                "value": "ZOOMEYE_KEY",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "search_type": {
                "value": "host",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "query": {
                "value": "",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "page": {
                "value": 1,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "facets": {
                "value": "",
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            },
            "history": {
                "value": true,
                "type": "string",
                "required": true,
                "default": null,
                "description": ""
            }
        }
    }
}
